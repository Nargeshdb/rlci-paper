// Autogenerated Jamon proxy
// /home/narges/IntellijWS/hbase/hbase-server/src/main/jamon/org/apache/hadoop/hbase/tmpl/master/BackupMasterStatusTmpl.jamon
package org.apache.hadoop.hbase.tmpl.master;

// 23, 1
import java.util.*;
// 24, 1
import org.apache.hadoop.hbase.ServerName;
// 25, 1
import org.apache.hadoop.hbase.ClusterMetrics;
// 26, 1
import org.apache.hadoop.hbase.master.HMaster;
// 27, 1
import org.apache.hadoop.hbase.zookeeper.MasterAddressTracker;

@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.mustcall.MustCallChecker")
public class BackupMasterStatusTmpl extends org.jamon.AbstractTemplateProxy {

    public BackupMasterStatusTmpl(org.jamon.TemplateManager p_manager) {
        super(p_manager);
    }

    protected BackupMasterStatusTmpl(String p_path) {
        super(p_path);
    }

    public BackupMasterStatusTmpl() {
        super("/org/apache/hadoop/hbase/tmpl/master/BackupMasterStatusTmpl");
    }

    public interface Intf extends org.jamon.AbstractTemplateProxy.Intf {

        @org.checkerframework.dataflow.qual.SideEffectFree
        void renderNoFlush(final java.io.Writer jamonWriter) throws java.io.IOException;
    }

    public static class ImplData extends org.jamon.AbstractTemplateProxy.ImplData {

        // 20, 1
        public void setMaster(HMaster master) {
            // 20, 1
            m_master = master;
        }

        @org.checkerframework.dataflow.qual.Pure
        public HMaster getMaster() {
            return m_master;
        }

        private HMaster m_master;
    }

    protected org.jamon.AbstractTemplateProxy.ImplData makeImplData() {
        return new ImplData();
    }

    public ImplData getImplData() {
        return (ImplData) super.getImplData();
    }

    public org.jamon.AbstractTemplateImpl constructImpl(Class<? extends org.jamon.AbstractTemplateImpl> p_class) {
        try {
            return p_class.getConstructor(new Class[] { org.jamon.TemplateManager.class, ImplData.class }).newInstance(new Object[] { getTemplateManager(), getImplData() });
        } catch (RuntimeException e) {
            throw e;
        } catch (Exception e) {
            throw new RuntimeException(e);
        }
    }

    protected org.jamon.AbstractTemplateImpl constructImpl() {
        return new BackupMasterStatusTmplImpl(getTemplateManager(), getImplData());
    }

    public org.jamon.Renderer makeRenderer(final HMaster master) {
        return new org.jamon.AbstractRenderer() {

            public void renderTo(final java.io.Writer jamonWriter) throws java.io.IOException {
                render(jamonWriter, master);
            }
        };
    }

    public void render(final java.io.Writer jamonWriter, final HMaster master) throws java.io.IOException {
        renderNoFlush(jamonWriter, master);
        jamonWriter.flush();
    }

    public void renderNoFlush(final java.io.Writer jamonWriter, final HMaster master) throws java.io.IOException {
        ImplData implData = getImplData();
        implData.setMaster(master);
        Intf instance = (Intf) getTemplateManager().constructImpl(this);
        instance.renderNoFlush(jamonWriter);
        reset();
    }
}
