/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.hadoop.hbase.security.access;

import org.apache.yetus.audience.InterfaceAudience;

/**
 * Represents an authorization for access whole cluster.
 */
@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.resourceleak.ResourceLeakChecker")
public class GlobalPermission extends Permission {

    /**
     * Construct a global permission.
     * @param assigned assigned actions
     */
    GlobalPermission(Action... assigned) {
        super(assigned);
        this.scope = Scope.GLOBAL;
    }

    @org.checkerframework.dataflow.qual.Pure
    public int hashCode() {
        return super.hashCode();
    }

    @org.checkerframework.dataflow.qual.Pure
    public boolean equals(Object obj) {
        return obj instanceof GlobalPermission && super.equals(obj);
    }

    public String toString() {
        return "[GlobalPermission: " + rawExpression() + "]";
    }
}
