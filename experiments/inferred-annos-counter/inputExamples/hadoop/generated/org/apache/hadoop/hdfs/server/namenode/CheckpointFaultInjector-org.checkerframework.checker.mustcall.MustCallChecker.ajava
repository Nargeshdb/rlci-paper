/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.hadoop.hdfs.server.namenode;

import java.io.File;
import java.io.IOException;

/**
 * Utility class to faciliate some fault injection tests for the checkpointing
 * process.
 */
@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.mustcall.MustCallChecker")
public class CheckpointFaultInjector {

    public static CheckpointFaultInjector instance = new CheckpointFaultInjector();

    @org.checkerframework.dataflow.qual.Pure
    public static CheckpointFaultInjector getInstance() {
        return instance;
    }

    public static void set(CheckpointFaultInjector instance) {
        CheckpointFaultInjector.instance = instance;
    }

    @org.checkerframework.dataflow.qual.SideEffectFree
    public void beforeGetImageSetsHeaders() throws IOException {
    }

    @org.checkerframework.dataflow.qual.SideEffectFree
    public void afterSecondaryCallsRollEditLog() throws IOException {
    }

    @org.checkerframework.dataflow.qual.SideEffectFree
    public void duringMerge() throws IOException {
    }

    @org.checkerframework.dataflow.qual.SideEffectFree
    public void afterSecondaryUploadsNewImage() throws IOException {
    }

    @org.checkerframework.dataflow.qual.SideEffectFree
    public void aboutToSendFile(File localfile) throws IOException {
    }

    @org.checkerframework.dataflow.qual.Pure
    public boolean shouldSendShortFile(File localfile) {
        return false;
    }

    @org.checkerframework.dataflow.qual.Pure
    public boolean shouldCorruptAByte(File localfile) {
        return false;
    }

    @org.checkerframework.dataflow.qual.SideEffectFree
    public void afterMD5Rename() throws IOException {
    }

    @org.checkerframework.dataflow.qual.SideEffectFree
    public void beforeEditsRename() throws IOException {
    }

    @org.checkerframework.dataflow.qual.SideEffectFree
    public void duringUploadInProgess() throws InterruptedException, IOException {
    }
}
